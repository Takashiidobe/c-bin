name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target:
          [
            "aarch64-linux-musl",
            "aarch64_be-linux-musl",
            "arm-linux-musleabi",
            "arm-linux-musleabihf",
            "armeb-linux-musleabi",
            "armeb-linux-musleabihf",
            "armel-linux-musleabi",
            "armel-linux-musleabihf",
            "armv5l-linux-musleabi",
            "armv5l-linux-musleabihf",
            "armv6-linux-musleabi",
            "armv6-linux-musleabihf",
            "armv7l-linux-musleabihf",
            "armv7m-linux-musleabi",
            "armv7r-linux-musleabihf",
            "i486-linux-musl",
            "i686-linux-musl",
            "i686-w64-mingw32",
            "m68k-linux-musl",
            "microblaze-linux-musl",
            "microblazeel-linux-musl",
            "mips-linux-musl",
            "mips-linux-musln32sf",
            "mips-linux-muslsf",
            "mips64-linux-musl",
            "mips64-linux-musln32",
            "mips64-linux-musln32sf",
            "mips64el-linux-musl",
            "mips64el-linux-musln32",
            "mips64el-linux-musln32sf",
            "mipsel-linux-musl",
            "mipsel-linux-musln32",
            "mipsel-linux-musln32sf",
            "mipsel-linux-muslsf",
            "or1k-linux-musl",
            "powerpc-linux-musl",
            "powerpc-linux-muslsf",
            "powerpc64-linux-musl",
            "powerpc64le-linux-musl",
            "powerpcle-linux-musl",
            "powerpcle-linux-muslsf",
            "riscv32-linux-musl",
            "riscv64-linux-musl",
            "s390x-linux-musl",
            "sh2-linux-musl",
            "sh2-linux-muslfdpic",
            "sh2eb-linux-musl",
            "sh2eb-linux-muslfdpic",
            "sh4-linux-musl",
            "sh4eb-linux-musl",
            "x86_64-linux-musl",
            "x86_64-linux-muslx32",
            "x86_64-w64-mingw32"
          ]
    env:
      CC: ${{ matrix.target }}-gcc
    steps:
    - uses: actions/checkout@v2
    - name: Download cross compiler
      run: |
        curl -O https://muslcc.netlify.app/${{ matrix.target }}-cross.tgz
        tar xzf ${{ matrix.target }}-cross.tgz -C /opt
    - run: echo "/opt/${{ matrix.target }}-cross/bin/" >> $GITHUB_PATH
    - run: ${{ matrix.target }}-gcc --version
    - name: build binary
      run: |
        CFLAGS="-static" ${{ matrix.target}}-gcc main.c -o hello
        ${{ matrix.target }}-strip hello || true
        mv hello ${{ matrix.target }}-hello-${{ github.ref_name }}
        file ./${{ matrix.target }}-hello
    - name: Publish archives and packages
      uses: softprops/action-gh-release@v1
      with:
        files: "${{ matrix.target }}-hello-${{ github.ref_name }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
